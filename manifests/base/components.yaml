apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: policy-server
  name: policy-server
  namespace: kyverno
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: policy-server
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: system:aggregated-policy-reader
rules:
- apiGroups:
  - wgpolicyk8s.io
  resources:
  - policyreports
  - clusterpolicyreports
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    k8s-app: policy-server
  name: policy-server-auth-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: policy-server
  namespace: kyverno
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: policy-server
  name: policy-server:system:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: policy-server
  namespace: kyverno
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: policy-server
  name: policy-server
  namespace: kyverno
spec:
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    k8s-app: policy-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: policy-server
  name: policy-server
  namespace: kyverno
spec:
  selector:
    matchLabels:
      k8s-app: policy-server
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      labels:
        k8s-app: policy-server
    spec:
      hostNetwork: true
      containers:
      - args:
        - --debug
        - --cert-dir=/tmp
        - --secure-port=4443
        - --metric-resolution=15s
        image: ghcr.io/vishal-chdhry/policy-server:debug
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /livez
            port: https
            scheme: HTTPS
          periodSeconds: 10
        name: policy-server
        ports:
        - containerPort: 4443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /tmp
          name: tmp-dir
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: policy-server
      volumes:
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  labels:
    k8s-app: policy-server
    kube-aggregator.kubernetes.io/automanaged: "false"
  name: v1alpha2.wgpolicyk8s.io
spec:
  group: wgpolicyk8s.io
  groupPriorityMinimum: 100
  insecureSkipTLSVerify: true
  service:
    name: policy-server
    namespace: kyverno
  version: v1alpha2
  versionPriority: 100
